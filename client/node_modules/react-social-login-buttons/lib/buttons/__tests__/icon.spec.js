"use strict";

var _enzymeAdapterReact = require("enzyme-adapter-react-16");

var _enzymeAdapterReact2 = _interopRequireDefault(_enzymeAdapterReact);

var _icon = require("../icon");

var _icon2 = _interopRequireDefault(_icon);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _enzyme = require("enzyme");

var _enzyme2 = _interopRequireDefault(_enzyme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_enzyme2.default.configure({ adapter: new _enzymeAdapterReact2.default() });

var render = function render(props) {
  return (0, _enzyme.shallow)(_react2.default.createElement(_icon2.default, props));
};

describe("icon", function () {
  it("Should render without crash", function () {
    render({ name: "test" });
  });

  it("Should give a className from format function", function () {
    var className = "foo";
    var wrapper = render({ format: function format() {
        return className;
      }, name: "test" });
    var i = wrapper.find("i");
    expect(i.hasClass(className)).toBe(true);
  });

  it("Should call the format function with name as a param", function () {
    var fn = jest.fn();
    var name = "test";
    render({ format: fn, name: name });
    expect(fn.mock.calls.length).toBe(1);
    expect(fn.mock.calls[0][0]).toBe(name);
  });
});
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _enzymeAdapterReact = require("enzyme-adapter-react-16");

var _enzymeAdapterReact2 = _interopRequireDefault(_enzymeAdapterReact);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _createButton = require("../create-button");

var _createButton2 = _interopRequireDefault(_createButton);

var _enzyme = require("enzyme");

var _enzyme2 = _interopRequireDefault(_enzyme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_enzyme2.default.configure({ adapter: new _enzymeAdapterReact2.default() });

describe("createButton", function () {
  it("should return a function", function () {
    expect(_typeof((0, _createButton2.default)({}))).toBe("function");
  });

  it("should render react element", function () {
    var Button = (0, _createButton2.default)({});
    (0, _enzyme.shallow)(_react2.default.createElement(Button, null));
  });

  it("should render SocialLoginButton", function () {
    var Button = (0, _createButton2.default)({
      foo: "bar"
    });
    var button = (0, _enzyme.shallow)(_react2.default.createElement(Button, null));

    var wrapper = button.find("SocialLoginButton");
    expect(wrapper.length).toBe(1);
  });

  it("should pass props to SocialLoginButton", function () {
    var Button = (0, _createButton2.default)({
      foo: "bar"
    });
    var button = (0, _enzyme.shallow)(_react2.default.createElement(Button, null));

    var wrapper = button.find("SocialLoginButton");
    expect(wrapper.props().foo).toBe("bar");
  });

  it("should pass style props to SocialLoginButton", function () {
    var Button = (0, _createButton2.default)({});
    var button = (0, _enzyme.shallow)(_react2.default.createElement(Button, null));

    var wrapper = button.find("SocialLoginButton");
    expect(wrapper.props().style).toBeDefined();
    expect(wrapper.props().activeStyle).toBeDefined();
  });
});
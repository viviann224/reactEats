{"ast":null,"code":"var _jsxFileName = \"/Users/vivianwin/Desktop/ClassLecture/Assignment/reacteats/client/src/components/Grid/Container.js\";\nimport React from \"react\"; // This Container component allows us to use a bootstrap container without worrying about class names\n\nexport var Container = function Container(_ref) {\n  var fluid = _ref.fluid,\n      children = _ref.children;\n  return React.createElement(\"div\", {\n    className: \"container\".concat(fluid ? \"-fluid\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/vivianwin/Desktop/ClassLecture/Assignment/reacteats/client/src/components/Grid/Container.js"],"names":["React","Container","fluid","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SACvB;AAAK,IAAA,SAAS,qBAAcD,KAAK,GAAG,QAAH,GAAc,EAAjC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADuB;AAAA,CAAlB","sourcesContent":["import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport const Container = ({ fluid, children }) => (\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\n    {children}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}